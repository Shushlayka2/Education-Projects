using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace ISO
{
    /// <summary>
    /// Логика взаимодействия для MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        List<ISOs> list; // Список ГОСТов
        int choice = 0; // Выбранный заголовок 0 - имя, 1 - код
        bool handTC = true; // Выполнять событие на изминение текста?
        string path; // Ссылка на pdf файл

        public MainWindow()
        {
            InitializeComponent();
            this.list = InitializeIsos(); // Инициализация списка
            InitializeComboBoxItems(list, combo_name); // Инициализация элементов ComboBoxа

            // Привязка обработчика для события TextChanget
            combo_name.AddHandler(System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent,
                      new System.Windows.Controls.TextChangedEventHandler(ComboBox_TextChanged));

            combo_code.AddHandler(System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent,
                      new System.Windows.Controls.TextChangedEventHandler(ComboBox_TextChanged));
        }

        private List<ISOs> InitializeIsos()
        {
            List<ISOs> list = new List<ISOs>
            {
                // Документация на разработку программного обеспечения и системная документация
                new ISOs {Name = "Аналоговая и аналого-цифровая вычислительная техника. Термины и определения", Code = "ГОСТ 18421-93", State = State.Acts, Pages = 16, FilePath = @"..\..\ГОСТ\18421-93.pdf"},
                new ISOs {Name = "Единая система программной документации. Схемы алгоритмов, программ, данных и систем. Обозначения условные и правила выполнения", Code = "ГОСТ 19.701-90", State = State.Acts, Pages = 24, FilePath = @"..\..\ГОСТ\19.701-90.pdf"},
                new ISOs {Name = "Качество программных средств. Термины и определения", Code = "ГОСТ 28806-90", State = State.Acts, Pages = 8, FilePath = @"..\..\ГОСТ\28806-90.pdf"},
                new ISOs {Name = "Единая система программной документации. Общие положения", Code = "ГОСТ 19.001-77", State = State.Acts, Pages = 6, FilePath =  @"..\..\ГОСТ\19.001-77.pdf"},
                new ISOs {Name = "Единая система программной документации. Р-схемы алгоритмов и программ. Обозначения условные графические и правила выполнения", Code = "ГОСТ 19.005-85", State = State.Acts, Pages = 14, FilePath = @"..\..\ГОСТ\19.005-85.pdf"},
                new ISOs {Name = "Единая система программной документации. Виды программ и программных документов", Code = "ГОСТ 19.101-77", State = State.Acts, Pages = 4, FilePath = @"..\..\ГОСТ\19.101-77.pdf"},
                new ISOs {Name = "Единая система программной документации. Стадии разработки", Code = "ГОСТ 19.102-77", State = State.Acts, Pages = 4, FilePath = @"..\..\ГОСТ\19.102-77.pdf"},
                new ISOs {Name = "Единая система программной документации. Обозначения программ и программных документов", Code = "ГОСТ 19.103-77", State = State.Acts, Pages = 4, FilePath = @"..\..\ГОСТ\19.103-77.pdf"},
                new ISOs {Name = "Единая система программной документации. Основные надписи", Code = "ГОСТ 19.104-78", State = State.Acts, Pages = 8, FilePath = @"..\..\ГОСТ\19.104-78.pdf"},
                new ISOs {Name = "Единая система программной документации. Общие требования к программным документам", Code = "ГОСТ 19.105-78", State = State.Acts, Pages = 4, FilePath = @"..\..\ГОСТ\19.105-78.pdf"},
                new ISOs {Name = "Единая система программной документации. Требования к программным документам, выполненным печатным способом", Code = "ГОСТ 19.106-78", State = State.Acts, Pages = 12, FilePath = @"..\..\ГОСТ\19.106-78.pdf"},
                new ISOs {Name = "Единая система программной документации. Техническое задание. Требования к содержанию и оформлению", Code = "ГОСТ 19.201-78", State = State.Acts, Pages = 4, FilePath = @"..\..\ГОСТ\19.201-78.pdf"},
                new ISOs {Name = "Единая система программной документации. Спецификация. Требования к содержанию и оформлению", Code = "ГОСТ 19.202-78", State = State.Acts, Pages = 4, FilePath = @"..\..\ГОСТ\19.202-78.pdf"},
                new ISOs {Name = "Единая система программной документации. Программа и методика испытаний. Требования к содержанию и оформлению", Code = "ГОСТ 19.301-79", State = State.Acts, Pages = 3, FilePath = @"..\..\ГОСТ\19.301-79.pdf"},
                new ISOs {Name = "Единая система программной документации. Текст программы. Требования к содержанию и оформлению", Code = "ГОСТ 19.401-78", State = State.Acts, Pages = 2, FilePath = @"..\..\ГОСТ\19.401-78.pdf"},
                new ISOs {Name = "Единая система программной документации. Описание программы", Code = "ГОСТ 19.402-78", State = State.Acts, Pages = 4, FilePath = @"..\..\ГОСТ\19.402-78.pdf"},
                new ISOs {Name = "Единая система программной документации. Ведомость держателей подлинников", Code = "ГОСТ 19.403-79", State = State.Acts, Pages = 4, FilePath = @"..\..\ГОСТ\19.403-79.pdf"},
                new ISOs {Name = "Единая система программной документации. Пояснительная записка. Требования к содержанию и оформлению", Code = "ГОСТ 19.404-79", State = State.Acts, Pages = 3, FilePath = @"..\..\ГОСТ\19.404-79.pdf"},
                new ISOs {Name = "Единая система программной документации. Формуляр. Требования к содержанию и оформлению", Code = "ГОСТ 19.501-78", State = State.Acts, Pages = 5, FilePath = @"..\..\ГОСТ\19.501-78.pdf"},
                new ISOs {Name = "Единая система программной документации. Описание применения. Требования к содержанию и оформлению", Code = "ГОСТ 19.502-78", State = State.Acts, Pages = 2, FilePath = @"..\..\ГОСТ\19.502-78.pdf"},
                new ISOs {Name = "Единая система программной документации. Руководство системного программиста. Требования к содержанию и оформлению", Code = "ГОСТ 19.503-79", State = State.Acts, Pages = 4, FilePath = @"..\..\ГОСТ\19.503-79.pdf"},
                new ISOs {Name = "Единая система программной документации. Руководство программиста. Требования к содержанию и оформлению", Code = "ГОСТ 19.504-79", State = State.Acts, Pages = 2, FilePath = @"..\..\ГОСТ\19.504-79.pdf"},
                new ISOs {Name = "Единая система программной документации. Руководство оператора. Требования к содержанию и оформлению", Code = "ГОСТ 19.505-79", State = State.Acts, Pages = 3, FilePath = @"..\..\ГОСТ\19.505-79.pdf"},
                new ISOs {Name = "Единая система программной документации. Описание языка. Требования к содержанию и оформлению", Code = "ГОСТ 19.506-79", State = State.Acts, Pages = 3, FilePath = @"..\..\ГОСТ\19.506-79.pdf"},
                new ISOs {Name = "Единая система программной документации. Ведомость эксплуатационных документов", Code = "ГОСТ 19.507-79", State = State.Acts, Pages = 6, FilePath = @"..\..\ГОСТ\19.507-79.pdf"},
                new ISOs {Name = "Единая система программной документации. Руководство по техническому обслуживанию. Требования к содержанию и оформлению", Code = "ГОСТ 19.508-79", State = State.Acts, Pages = 2, FilePath = @"..\..\ГОСТ\19.508-79.pdf"},
                new ISOs {Name = "Единая система программной документации. Общие правила дублирования, учета и хранения", Code = "ГОСТ 19.601-78", State = State.Acts, Pages = 6, FilePath = @"..\..\ГОСТ\19.601-78.pdf"},
                new ISOs {Name = "Единая система программной документации. Правила дублирования, учета и хранения программных документов, выполненных печатным способом", Code = "ГОСТ 19.602-78", State = State.Acts, Pages = 4, FilePath = @"..\..\ГОСТ\19.602-78.pdf"},
                new ISOs {Name = "Единая система программной документации. Общие правила внесения изменений", Code = "ГОСТ 19.603-78", State = State.Acts, Pages = 6, FilePath = @"..\..\ГОСТ\19.603-78.pdf"},
                new ISOs {Name = "Единая система программной документации. Правила внесения изменений в программные документы, выполненные печатным способом", Code = "ГОСТ 19.604-78", State = State.Acts, Pages = 6, FilePath = @"..\..\ГОСТ\19.604-78.pdf"},
                new ISOs {Name = "Информационная технология. Комплекс стандартов на автоматизированные системы. Автоматизированные системы. Стадии создания", Code = "ГОСТ 34.601-90", State = State.Acts, Pages = 6, FilePath = @"..\..\ГОСТ\34.601-90.pdf"},
                new ISOs {Name = "Информационная технология. Комплекс стандартов на автоматизированные системы. Техническое задание на создание автоматизированной системы", Code = "ГОСТ 34.602-89", State = State.Acts, Pages = 12, FilePath = @"..\..\ГОСТ\34.602-89.pdf"},
                new ISOs {Name = "Оценка качества программных средств. Общие положения", Code = "ГОСТ 28195-89", State = State.Acts, Pages = 31, FilePath = @"..\..\ГОСТ\28195-89.pdf"},
                new ISOs {Name = "Программное обеспечение встроенных систем. Общие требования к разработке и документированию", Code = "ГОСТ Р 51904-2002", State = State.Acts, Pages = 67, FilePath = @"..\..\ГОСТ\51904-2002.pdf"},
                new ISOs {Name = "Информационно-коммуникационные технологии в образовании. Образовательные интернет-порталы федерального уровня. Рубрикация информационных ресурсов", Code = "ГОСТ Р 52657-2006", State = State.Acts, Pages = 12, FilePath = @"..\..\ГОСТ\52657-2006.pdf"},
                new ISOs {Name = "Системы обработки информации. Документация пользователя и информация на упаковке для потребительских программных пакетов", Code = "ГОСТ Р ИСО 9127-94", State = State.Acts, Pages = 11, FilePath = @"..\..\ГОСТ\9127-94.pdf"},
                new ISOs {Name = "Система стандартов по информации, библиотечному и издательскому делу. Описание баз данных и машиночитаемых информационных массивов. Состав и обозначение характеристик", Code = "ГОСТ 7.70-96", State = State.Replaced, Pages = 50, FilePath = @"..\..\ГОСТ\7.70-96.pdf"},
                new ISOs {Name = "Защита информации. Испытания программных средств на наличие компьютерных вирусов. Типовое руководство", Code = "ГОСТ Р 51188-98", State = State.Acts, Pages = 9, FilePath = @"..\..\ГОСТ\51188-98.pdf"},
                new ISOs {Name = "Средства программные систем вооружения. Порядок разработки", Code = "ГОСТ Р 51189-98", State = State.Acts, Pages = 16, FilePath = @"..\..\ГОСТ\51189-98.pdf"},
                new ISOs {Name = "Информационная технология. Оценка программной продукции. Характеристики качества и руководства по их применению", Code = "ГОСТ Р ИСО/МЭК 9126-93", State = State.Acts, Pages = 12, FilePath = @"..\..\ГОСТ\9126-93.pdf"},
                new ISOs {Name = "Информационная технология. Руководство по управлению документированием программного обеспечения", Code = "ГОСТ Р ИСО/МЭК ТО 9294-93", State = State.Acts, Pages = 11, FilePath = @"..\..\ГОСТ\9294-93.pdf"},
                new ISOs {Name = "Информационная технология. Сопровождение программных средств", Code = "ГОСТ Р ИСО/МЭК 14764-2002", State = State.Acts, Pages = 32, FilePath = @"..\..\ГОСТ\14764-2002.pdf"},
                new ISOs {Name = "Информационная технология. Уровни целостности систем и программных средств", Code = "ГОСТ Р ИСО/МЭК 15026-2002", State = State.Acts, Pages = 15, FilePath = @"..\..\ГОСТ\15026-2002.pdf"},
                new ISOs {Name = "Информационная технология. Процессы жизненного цикла программных средств", Code = "ГОСТ Р ИСО/МЭК 12207-99", State = State.Replaced, Pages = 46, FilePath = @"..\..\ГОСТ\12207-99.pdf"},
                new ISOs {Name = "Информационная технология. Процесс создания документации пользователя программного средства", Code = "ГОСТ Р ИСО/МЭК 15910-2002", State = State.Acts, Pages = 49, FilePath = @"..\..\ГОСТ\15910-2002.pdf"},
                new ISOs {Name = "Информационная технология. Пакеты программ. Требования к качеству и тестирование", Code = "ГОСТ Р ИСО/МЭК 12119-2000", State = State.Acts, Pages = 19, FilePath = @"..\..\ГОСТ\12119-2000.pdf"},
                new ISOs {Name = "Информационная технология. Классификация программных средств", Code = "ГОСТ Р ИСО/МЭК ТО 12182-2002", State = State.Acts, Pages = 16, FilePath = @"..\..\ГОСТ\12182-2002.pdf"},
                new ISOs {Name = "Информационная технология. Системная инженерия. Процессы жизненного цикла систем", Code = "ГОСТ Р ИСО/МЭК 15288-2005", State = State.Acts, Pages = 57, FilePath = @"..\..\ГОСТ\15288-2005.pdf"},
                new ISOs {Name = "Программная инженерия. Руководство по применению ГОСТ Р ИСО/МЭК 12207 при управлении проектом", Code = "ГОСТ Р ИСО/МЭК ТО 16326-2002", State = State.Acts, Pages = 40, FilePath = @"..\..\ГОСТ\16326-2002.pdf"},
                new ISOs {Name = "Стандартное руководство по лабораторным информационным менеджмент-системам (ЛИМС)", Code = "ГОСТ Р 53798-2010", State = State.Acts, Pages = 78, FilePath = @"..\..\ГОСТ\53798-2010.pdf"},
                new ISOs {Name = "Информационная технология. Руководство по применению ГОСТ Р ИСО/МЭК 12207 (Процессы жизненного цикла программных средств)", Code = "ГОСТ Р ИСО/МЭК ТО 15271-2002", State = State.Acts, Pages = 45, FilePath = @"..\..\ГОСТ\15271-2002.pdf"},
                new ISOs {Name = "Лабораторные информационные менеджмент-системы (ЛИМС). Стандартное руководство по валидации ЛИМС", Code = "ГОСТ Р 54360-2011", State = State.Acts, Pages = 44, FilePath = @"..\..\ГОСТ\54360-2011.pdf"},
                new ISOs {Name = "Информационная технология. Системная и программная инженерия. Процессы жизненного цикла программных средств", Code = "ГОСТ Р ИСО/МЭК 12207-2010", State = State.Acts, Pages = 106, FilePath = @"..\..\ГОСТ\12207-2010.pdf"},
                new ISOs {Name = "Информационные технологии. Свободное программное обеспечение. Общие положения", Code = "ГОСТ Р 54593-2011", State = State.Acts, Pages = 12, FilePath = @"..\..\ГОСТ\54593-2011.pdf"},
                new ISOs {Name = "Модули электронные. Методы составления и отладки тест-программ для автоматизированного котроля", Code = "ГОСТ Р 55692-2013", State = State.Acts, Pages = 32, FilePath = @"..\..\ГОСТ\55692-2013.pdf"},
                new ISOs {Name = "Комплекс технических средств автоматизированной адаптивной ВЧ (КВ) дуплексной радиосвязи. Алгоритмы работы", Code = "ГОСТ Р 55711-2013", State = State.Acts, Pages = 20, FilePath = @"..\..\ГОСТ\55711-2013.pdf"},
                new ISOs {Name = "Информационная технология. Программные конструктивы и условные обозначения для их представления", Code = "ГОСТ Р ИСО/МЭК 8631-94", State = State.Acts, Pages = 15, FilePath = @"..\..\ГОСТ\8631-94.pdf"},
                new ISOs {Name = "Информационная технология. Открытая распределенная обработка. Базовая модель. Часть 1. Основные положения", Code = "ГОСТ Р ИСО/МЭК 10746-1-2004", State = State.Acts, Pages = 81, FilePath = @"..\..\ГОСТ\10746-1-2004.pdf"},
                new ISOs {Name = "Информационная технология. Открытая распределенная обработка. Базовая модель. Часть 4. Архитектурная семантика", Code = "ГОСТ Р ИСО/МЭК 10746-4-2004", State = State.Acts, Pages = 34, FilePath = @"..\..\ГОСТ\10746-4-2004.pdf"},
                new ISOs {Name = "Информационные технологии. Оценка процессов. Часть 1. Концепция и словарь", Code = "ГОСТ Р ИСО/МЭК 15504-1-2009", State = State.Acts, Pages = 24, FilePath = @"..\..\ГОСТ\15504-1-2009.pdf"},
                new ISOs {Name = "Информационная технология. Оценка процесса. Часть 2. Проведение оценки", Code = "ГОСТ Р ИСО/МЭК 15504-2-2009", State = State.Acts, Pages = 20, FilePath = @"..\..\ГОСТ\15504-2-2009.pdf"},
                new ISOs {Name = "Информационная технология. Оценка процесса. Часть 3. Руководство по проведению оценки", Code = "ГОСТ Р ИСО/МЭК 15504-3-2009", State = State.Acts, Pages = 45, FilePath = @"..\..\ГОСТ\15504-3-2009.pdf"},
         
        /*      Информационные технологии (ит) в целом
                new ISOs {Name = "Информационная технология. Оценка процесса. Часть 4. Руководство по применению для улучшения и оценки возможностей процесса", Code = "ГОСТ Р ИСО/МЭК 15504-4-2012", State = State.Acts, Pages = 52, FilePath = @"..\..\ГОСТ\15504-4-2012.pdf"},
                new ISOs {Name = "Обслуживание средств вычислительной техники централизованное комплексное. Термины и определения", Code = "ГОСТ 26553-85", State = State.Acts, Pages = 5, FilePath = @"..\..\ГОСТ\26553-85.pdf"},
                new ISOs {Name = "Качество служебной информации. Термины и определения", Code = "ГОСТ Р 51170-98", State = State.Acts, Pages = 11, FilePath = @"..\..\ГОСТ\51170-98.pdf"},
                new ISOs {Name = "Защита информации. Объект информатизации. Факторы, воздействующие на информацию. Общие положения", Code = "ГОСТ Р 51275-99", State = State.Replaced, Pages = 9, FilePath = @"..\..\ГОСТ\51275-99.pdf"},
                new ISOs {Name = "Информационная технология. Электронный обмен информацией. Термины и определения", Code = "ГОСТ Р 52292-2004", State = State.Acts, Pages = 20, FilePath = @"..\..\ГОСТ\52292-2004.pdf"},
                new ISOs {Name = "Система технического обслуживания и ремонта технических средств вычислительной техники и информатики. Виды и методы технического обслуживания и ремонта", Code = "ГОСТ 28470-90", State = State.Acts, Pages = 4, FilePath = @"..\..\ГОСТ\28470-90.pdf"},
                new ISOs {Name = "Совместимость технических средств электромагнитная. Устойчивость средств вычислительной техники и информатики к электромагнитным помехам. Требования и методы испытаний", Code = "ГОСТ Р 50839-2000", State = State.Acts, Pages = 11, FilePath = @"..\..\ГОСТ\50839-2000.pdf"},
                new ISOs {Name = "Информационная технология. Управление организацией. Электронный регламент административной и служебной деятельности. Основные положения", Code = "ГОСТ Р 52294-2004", State = State.Acts, Pages = 31, FilePath = @"..\..\ГОСТ\52294-2004.pdf"},
                new ISOs {Name = "Информационное обеспечение техники и операторской деятельности. Общие положения", Code = "ГОСТ Р 43.0.1-2005", State = State.Acts, Pages = 6, FilePath = @"..\..\ГОСТ\43.0.1-2005.pdf"},
                new ISOs {Name = "Информационная технология. Методы и средства обеспечения безопасности. Часть 5. Руководство по менеджменту безопасности сети", Code = "ГОСТ Р ИСО/МЭК ТО 13335-5-2006", State = State.Acts, Pages = 26, FilePath = @"..\..\ГОСТ\13335-5-2006.pdf"},
                new ISOs {Name = "Информационная технология. Методы и средства обеспечения безопасности. Часть 1. Концепция и модели менеджмента безопасности информационных и телекоммуникационных технологий", Code = "ГОСТ Р ИСО/МЭК 13335-1-2006", State = State.Acts, Pages = 23, FilePath = @"..\..\ГОСТ\13335-1-2006.pdf"},
                new ISOs {Name = "Оборудование информационных технологий. Требования безопасности. Часть 21. Удаленное электропитание", Code = "ГОСТ Р МЭК 60950-21-2005", State = State.Replaced, Pages = 16, FilePath = @"..\..\ГОСТ\60950-21-2005.pdf"},
                new ISOs {Name = "Информационное обеспечение техники и операторской деятельности. Язык операторской деятельности. Общие положения", Code = "ГОСТ Р 43.2.1-2007", State = State.Acts, Pages = 15, FilePath = @"..\..\ГОСТ\43.2.1-2007.pdf"},
                new ISOs {Name = "Оборудование информационных технологий. Требования безопасности. Часть 1. Общие требования", Code = "ГОСТ Р МЭК 60950-1-2005", State = State.Replaced, Pages = 186, FilePath = @"..\..\ГОСТ\60950-1-2005.pdf"},
                new ISOs {Name = "Информационная технология. Методы и средства физической защиты. Классификация и методы испытаний на огнестойкость. Комнаты и контейнеры данных", Code = "ГОСТ Р 52919-2008", State = State.Acts, Pages = 20, FilePath = @"..\..\ГОСТ\52919-2008.pdf"},
                new ISOs {Name = "Системы передачи данных. Процедуры управления звеном передачи данных в основном режиме для полудуплексного обмена информацией", Code = "ГОСТ 22731-77", State = State.Acts, Pages = 20, FilePath = @"..\..\ГОСТ\22731-77.pdf"},
                new ISOs {Name = "Системы обработки данных. Показатели использования", Code = "ГОСТ 26525-85", State = State.Acts, Pages = 11, FilePath = @"..\..\ГОСТ\26525-85.pdf"},
                new ISOs {Name = "Процедурные характеристики на стыке между оконечным оборудованием данных и аппаратурой окончания канала данных. Общие требования и нормы", Code = "ГОСТ 27771-88", State = State.Acts, Pages = 35, FilePath = @"..\..\ГОСТ\27771-88.pdf"},
                new ISOs {Name = "Системы обработки информации. Методы обнаружения ошибок при последовательной передаче данных", Code = "ГОСТ 28082-89", State = State.Acts, Pages = 11, FilePath = @"..\..\ГОСТ\28082-89.pdf"},
                new ISOs {Name = "Системы обработки информации. Спецификация файла описания данных для обмена информацией", Code = "ГОСТ 28270-89", State = State.Acts, Pages = 35, FilePath = @"..\..\ГОСТ\28270-89.pdf"},
                new ISOs {Name = "Информационное обеспечение техники и операторской деятельности. Термины и определения", Code = "ГОСТ Р 43.0.2-2006", State = State.Acts, Pages = 7, FilePath = @"..\..\ГОСТ\43.0.2-2006.pdf"},
                new ISOs {Name = "Средства вычислительной техники. Защита от несанкционированного доступа к информации. Общие технические требования", Code = "ГОСТ Р 50739-95", State = State.Acts, Pages = 8, FilePath = @"..\..\ГОСТ\50739-95.pdf"},
                new ISOs {Name = "Безопасность оборудования информационных технологий", Code = "ГОСТ Р МЭК 60950-2002", State = State.Acts, Pages = 177, FilePath = @"..\..\ГОСТ\60950-2002.pdf"},
                new ISOs {Name = "Информационное обеспечение техники и операторской деятельности. Ноон-технология в технической деятельности. Общие положения", Code = "ГОСТ Р 43.0.3-2009", State = State.Acts, Pages = 24, FilePath = @"..\..\ГОСТ\43.0.3-2009.pdf"},
                new ISOs {Name = "Информационное обеспечение техники и операторской деятельности. Информация в технической деятельности. Общие положения", Code = "ГОСТ Р 43.0.4-2009", State = State.Acts, Pages = 20, FilePath = @"..\..\ГОСТ\43.0.4-2009.pdf"},
                new ISOs {Name = "Информационное обеспечение техники и операторской деятельности. Процессы иформационно-обменные в технической деятельности. Общие положения", Code = "ГОСТ Р 43.0.5-2009", State = State.Acts, Pages = 20, FilePath = @"..\..\ГОСТ\43.0.5-2009.pdf"},
                new ISOs {Name = "Информационное обеспечение техники и операторской деятельности. Естественно-интеллектуализированное человекоинфомационное взаимодействие. Общие положения", Code = "ГОСТ Р 43.0.6-2011", State = State.Acts, Pages = 32, FilePath = @"..\..\ГОСТ\43.0.6-2011.pdf"},
                new ISOs {Name = "Информационное обеспечение техники и операторской деятельности. Язык операторской деятельности. Общие положения по применению", Code = "ГОСТ Р 43.2.2-2009", State = State.Acts, Pages = 24, FilePath = @"..\..\ГОСТ\43.2.2-2009.pdf"},
                new ISOs {Name = "Информационное обеспечение техники и операторской деятельности. Язык операторской деятельности. Виды и свойства знаковых компонентов", Code = "ГОСТ Р 43.2.3-2009", State = State.Acts, Pages = 20, FilePath = @"..\..\ГОСТ\43.2.3-2009.pdf"},
                new ISOs {Name = "Информационное обеспечение техники и операторской деятельности. Язык операторской деятельности. Cинтактика знаковых компонентов", Code = "ГОСТ Р 43.2.4-2009", State = State.Acts, Pages = 20, FilePath = @"..\..\ГОСТ\43.2.4-2009.pdf"},
                new ISOs {Name = "Оборудование информационных технологий. Требования безопасности. Часть 1. Общие требования", Code = "ГОСТ Р МЭК 60950-1-2009", State = State.Canceled, Pages = 219, FilePath = @"..\..\ГОСТ\60950-1-2009.pdf"},
                new ISOs {Name = "Качество служебной информации. Графические модели технологических процессов переработки данных", Code = "ГОСТ Р 51167-98", State = State.Acts, Pages = 11, FilePath = @"..\..\ГОСТ\51167-98.pdf"},
                new ISOs {Name = "Качество служебной информации. Условные обозначения элементов технологических процессов переработки данных", Code = "ГОСТ Р 51168-98", State = State.Acts, Pages = 8, FilePath = @"..\..\ГОСТ\51168-98.pdf"},
                new ISOs {Name = "Качество служебной информации. Система сертификации информационных технологий в области качества служебной информации. Термины и определения", Code = "ГОСТ Р 51169-98", State = State.Acts, Pages = 10, FilePath = @"..\..\ГОСТ\51169-98.pdf"},
                new ISOs {Name = "Качество служебной информации. Правила предъявления информационных технологий на сертификацию", Code = "ГОСТ Р 51171-98", State = State.Acts, Pages = 11, FilePath = @"..\..\ГОСТ\51171-98.pdf"},
                new ISOs {Name = "Защита информации. Обеспечение информационной безопасности в организации. Основные термины и определения", Code = "ГОСТ Р 53114-2008", State = State.Acts, Pages = 20, FilePath = @"..\..\ГОСТ\53114-2008.pdf"},
                new ISOs {Name = "Информационные технологии. Системы кабельные структурированные. Монтаж основных узлов системы. Методы испытания", Code = "ГОСТ Р 53245-2008", State = State.Acts, Pages = 39, FilePath = @"..\..\ГОСТ\53245-2008.pdf"},
                new ISOs {Name = "Информационные технологии. Системы кабельные структурированные. Проектирование основных узлов системы. Общие требования", Code = "ГОСТ Р 53246-2008", State = State.Acts, Pages = 77, FilePath = @"..\..\ГОСТ\53246-2008.pdf"},
                new ISOs {Name = "Многопарные кабели с медными жилами для цепей широкополосного доступа. Общие технические требования", Code = "ГОСТ Р 53538-2009", State = State.Acts, Pages = 12, FilePath = @"..\..\ГОСТ\53538-2009.pdf"},
                new ISOs {Name = "Информационные технологии. Сеть управления электросвязью. Расширенная схема деятельности организации связи (eТОМ). Общая структура бизнес-процессов", Code = "ГОСТ Р 53633.0-2009", State = State.Acts, Pages = 24, FilePath = @"..\..\ГОСТ\53633.0-2009.pdf"},
                new ISOs {Name = "Информационная технология. Сеть управления электросвязью. Расширенная схема деятельности организации связи (eТОМ). Декомпозиция и описания процессов. Процессы уровня 2 eTOM. Основная деятельность. Управление взаимоотношениями с поставщиками и партнерами", Code = "ГОСТ Р 53633.1-2009", State = State.Acts, Pages = 16, FilePath = @"..\..\ГОСТ\53633.1-2009.pdf"},
                new ISOs {Name = "Информационные технологии. Сеть управления электросвязью. Расширенная схема деятельности организации связи (eТОМ). Декомпозиция и описания процессов. Процессы уровня 2 eTOM. Основная деятельность. Управление и эксплуатация ресурсов", Code = "ГОСТ Р 53633.2-2009", State = State.Acts, Pages = 16, FilePath = @"..\..\ГОСТ\53633.2-2009.pdf"},
                new ISOs {Name = "Информационная технология. Сеть управления электросвязью. Расширенная схема деятельности организации связи (eТОМ). Декомпозиция и описания процессов. Процессы уровня 2 eTOM. Основная деятельность. Управление взаимоотношениями с клиентами", Code = "ГОСТ Р 53633.3-2009", State = State.Acts, Pages = 16, FilePath = @"..\..\ГОСТ\53633.3-2009.pdf"},
                new ISOs {Name = "Стандартное руководство по лабораторным информационным менеджмент-системам (ЛИМС)", Code = "ГОСТ Р 53798-2010", State = State.Acts, Pages = 78, FilePath = @"..\..\ГОСТ\53798-2010.pdf"},
                new ISOs {Name = "Информационная технология. Менеджмент услуг. Часть 1. Спецификация", Code = "ГОСТ Р ИСО/МЭК 20000-1-2010", State = State.Replaced, Pages = 20, FilePath = @"..\..\ГОСТ\20000-1-2010.pdf"},
                new ISOs {Name = "Информационная технология. Менеджмент услуг. Часть 2. Кодекс практической деятельности", Code = "ГОСТ Р ИСО/МЭК 20000-2-2010", State = State.Acts, Pages = 36, FilePath = @"..\..\ГОСТ\20000-2-2010.pdf"},
                new ISOs {Name = "Оборудование информационных технологий. Требования безопасности. Часть 22. Оборудование, предназначенное для установки на открытом воздухе", Code = "ГОСТ Р МЭК 60950-22-2009", State = State.Replaced, Pages = 28, FilePath = @"..\..\ГОСТ\60950-22-2009.pdf"},
                new ISOs {Name = "Методы измерения тока прикосновения и тока защитного проводника", Code = "ГОСТ Р МЭК 60990-2010", State = State.Acts, Pages = 50, FilePath = @"..\..\ГОСТ\60990-2010.pdf"},
                new ISOs {Name = "Потребление энергии оборудованием информационных технологий. Методы измерения", Code = "ГОСТ Р МЭК 62018-2011", State = State.Acts, Pages = 7, FilePath = @"..\..\ГОСТ\62018-2011.pdf"},
                new ISOs {Name = "Информационное обеспечение техники операторской деятельности. Гибридно-интеллектуализированное человекоинформационное взаимодействие. Общие положения", Code = "ГОСТ Р 43.0.7-2011", State = State.Acts, Pages = 32, FilePath = @"..\..\ГОСТ\43.0.7-2011.pdf"},
                new ISOs {Name = "Информационное обеспечение техники и операторской деятельности. Язык операторской деятельности. Грамматика", Code = "ГОСТ Р 43.2.5-2011", State = State.Acts, Pages = 20, FilePath = @"..\..\ГОСТ\43.2.5-2011.pdf"},
                new ISOs {Name = "Информационное обеспечение техники и операторской деятельности. Язык операторской деятельности. Морфология", Code = "ГОСТ Р 43.2.6-2011", State = State.Acts, Pages = 24, FilePath = @"..\..\ГОСТ\43.2.6-2011.pdf"},
                new ISOs {Name = "Информационное обеспечение техники и операторской деятельности. Система «человек-информация»", Code = "ГОСТ Р 43.4.1-2011", State = State.Acts, Pages = 42, FilePath = @"..\..\ГОСТ\43.4.1-2011.pdf"},
                new ISOs {Name = "Информационные технологии. Сеть управления электросвязью. Расширенная схема деятельности организации связи (eTOM). Декомпозиция и описания процессов. Процессы уровня 2 eTOM. Стратегия, инфраструктура и продукт. Управление маркетингом и предложением продукта", Code = "ГОСТ Р 53633.5-2012", State = State.Acts, Pages = 12, FilePath = @"..\..\ГОСТ\53633.5-2012.pdf"},
                new ISOs {Name = "Информационные технологии. Сеть управления электросвязью. Расширенная схема деятельности организации связи (eTOM). Декомпозиция и описания процессов. Процессы уровня 2 eTOM. Стратегия, инфраструктура и продукт. Разработка и управление услугами", Code = "ГОСТ Р 53633.6-2012", State = State.Acts, Pages = 12, FilePath = @"..\..\ГОСТ\53633.6-2012.pdf"},
                new ISOs {Name = "Информационные технологии. Сеть управления электросвязью. Расширенная схема деятельности организации связи (eTOM). Декомпозиция и описания процессов. Процессы уровня 2 eTOM. Стратегия, инфраструктура и продукт. Разработка и управление цепочками поставок", Code = "ГОСТ Р 53633.8-2012", State = State.Acts, Pages = 12, FilePath = @"..\..\ГОСТ\53633.8-2012.pdf"},
                new ISOs {Name = "Воспламенение аудио-, видеоаппаратуры, оборудования информационных технологий и связи, случайно возникшее от пламени свечи", Code = "ГОСТ Р 54817-2011", State = State.Acts, Pages = 12, FilePath = @"..\..\ГОСТ\54817-2011.pdf"},
                new ISOs {Name = "Безопасность лазерной аппаратуры. Часть 8. Руководящие указания по безопасному использованию лазерных пучков для человека", Code = "ГОСТ Р 54841-2011", State = State.Acts, Pages = 59, FilePath = @"..\..\ГОСТ\54841-2011.pdf"},
                new ISOs {Name = "Информационная технология. Методы и средства обеспечения безопасности. Часть 3. Методы менеджмента безопасности информационных технологий", Code = "ГОСТ Р ИСО/МЭК ТО 13335-3-2007", State = State.Replaced, Pages = 49, FilePath = @"..\..\ГОСТ\13335-3-2007.pdf"},
                new ISOs {Name = "Электробезопасность. Классификация интерфейсов для оборудования, подсоединяемого к сетям информационных и коммуникационных технологий", Code = "ГОСТ Р 55248-2012", State = State.Acts, Pages = 36, FilePath = @"..\..\ГОСТ\55248-2012.pdf"},
                new ISOs {Name = "Информационные технологии. Словарь. Часть 36. Обучение, образование и подготовка", Code = "ГОСТ Р ИСО/МЭК 2382-36-2011", State = State.Acts, Pages = 12, FilePath = @"..\..\ГОСТ\2382-36-2011.pdf"},
                new ISOs {Name = "Информационная технология. Европейская рамка ИКТ-компетенций 2.0. Часть 3. Создание e-CF - соединение методологических основ и опыта экспертов", Code = "ГОСТ Р 55766-2013", State = State.Acts, Pages = 37, FilePath = @"..\..\ГОСТ\55766-2013.pdf"},
                new ISOs {Name = "Информационная технология. Европейская рамка ИКТ-компетенций 2.0. Часть 1. Общая европейская рамка компетенций ИКТ-специалистов для всех секторов индустрии", Code = "ГОСТ Р 55767-2013", State = State.Acts, Pages = 142, FilePath = @"..\..\ГОСТ\55767-2013.pdf"},
                new ISOs {Name = "Информационная технология. Модель открытой Грид-системы. Основные положения", Code = "ГОСТ Р 55768-2013", State = State.Acts, Pages = 66, FilePath = @"..\..\ГОСТ\55768-2013.pdf"},
                new ISOs {Name = "Информационная технология. Управление услугами. Часть 1. Требования к системе управления услугами", Code = "ГОСТ Р ИСО/МЭК 20000-1-2013", State = State.Acts, Pages = 41, FilePath = @"..\..\ГОСТ\20000-1-2013.pdf"},
                new ISOs {Name = "Информационная технология. Методы и средства обеспечения безопасности. Часть 4. Выбор защитных мер", Code = "ГОСТ Р ИСО/МЭК ТО 13335-4-2007", State = State.Replaced, Pages = 65, FilePath = @"..\..\ГОСТ\13335-4-2007.pdf"},
                new ISOs {Name = "Оборудование информационных технологий. Требования безопасности. Часть 23. Оборудование для хранения больших объемов данных", Code = "ГОСТ Р МЭК 60950-23-2011", State = State.Acts, Pages = 12, FilePath = @"..\..\ГОСТ\60950-23-2011.pdf"},
                new ISOs {Name = "Информационное обеспечение техники и операторской деятельности. Система «человек-информация»", Code = "ГОСТ Р 43.4.1-2011", State = State.Acts, Pages = 42, FilePath = @"..\..\ГОСТ\43.4.1-2011.pdf"},
                new ISOs {Name = "Информационное обеспечение техники и операторской деятельности. Система «человек-информация»", Code = "ГОСТ Р 43.4.1-2011", State = State.Acts, Pages = 42, FilePath = @"..\..\ГОСТ\43.4.1-2011.pdf"},
                new ISOs {Name = "Информационное обеспечение техники и операторской деятельности. Система «человек-информация»", Code = "ГОСТ Р 43.4.1-2011", State = State.Acts, Pages = 42, FilePath = @"..\..\ГОСТ\43.4.1-2011.pdf"},
                new ISOs {Name = "Информационное обеспечение техники и операторской деятельности. Система «человек-информация»", Code = "ГОСТ Р 43.4.1-2011", State = State.Acts, Pages = 42, FilePath = @"..\..\ГОСТ\43.4.1-2011.pdf"},
                new ISOs {Name = "Информационное обеспечение техники и операторской деятельности. Система «человек-информация»", Code = "ГОСТ Р 43.4.1-2011", State = State.Acts, Pages = 42, FilePath = @"..\..\ГОСТ\43.4.1-2011.pdf"},
                new ISOs {Name = "Информационное обеспечение техники и операторской деятельности. Система «человек-информация»", Code = "ГОСТ Р 43.4.1-2011", State = State.Acts, Pages = 42, FilePath = @"..\..\ГОСТ\43.4.1-2011.pdf"},
                new ISOs {Name = "Информационное обеспечение техники и операторской деятельности. Система «человек-информация»", Code = "ГОСТ Р 43.4.1-2011", State = State.Acts, Pages = 42, FilePath = @"..\..\ГОСТ\43.4.1-2011.pdf"},
                new ISOs {Name = "Информационное обеспечение техники и операторской деятельности. Система «человек-информация»", Code = "ГОСТ Р 43.4.1-2011", State = State.Acts, Pages = 42, FilePath = @"..\..\ГОСТ\43.4.1-2011.pdf"},
                new ISOs {Name = "Информационное обеспечение техники и операторской деятельности. Система «человек-информация»", Code = "ГОСТ Р 43.4.1-2011", State = State.Acts, Pages = 42, FilePath = @"..\..\ГОСТ\43.4.1-2011.pdf"},
                new ISOs {Name = "Информационное обеспечение техники и операторской деятельности. Система «человек-информация»", Code = "ГОСТ Р 43.4.1-2011", State = State.Acts, Pages = 42, FilePath = @"..\..\ГОСТ\43.4.1-2011.pdf"},
                new ISOs {Name = "Информационное обеспечение техники и операторской деятельности. Система «человек-информация»", Code = "ГОСТ Р 43.4.1-2011", State = State.Acts, Pages = 42, FilePath = @"..\..\ГОСТ\43.4.1-2011.pdf"},*/
            };
            return list;
        }

        private void InitializeComboBoxItems(List<ISOs> list, ComboBox obj)
        {
            Sort(list, 0, list.Count - 1); // сортировка списка
            for (int i = 0; i < list.Count; i++)
            {
                string st = obj.Text.ToLower();
                string sl;
                if (obj == combo_name)
                    sl = list[i].Name.ToLower();
                else
                    sl = list[i].Code.ToLower();
                // Первая реализация поиска (строгий поиск)
                /* int j = 0;
                 while ((j < obj.Text.Length) && (st[j] == sl[j]))
                     j++;
                 if (j == obj.Text.Length) // если текст в ComboBoxе совпадает с элементом из списка...
                 {
                     TextBlock newt = new TextBlock();
                     newt.Width = obj.ActualWidth;
                     newt.TextWrapping = TextWrapping.Wrap;
                     if (obj == combo_name)
                         newt.Text = list[i].Name;
                     else
                         newt.Text = list[i].Code;
                     obj.Items.Add(newt); // обертываем этот элемент списка и закидываем в элементы ComboBoxаы
                 }*/
                // Вторая реализация
                var index = sl.IndexOf(st); // Ищем вхождение st в sl
                if (index != -1) // Если вхождение найдено
                {
                    // Так как наши элементы в ComboBoxе будут представлять из себя сложные элементы 
                    //в виде TextBoxов со сложной структурой InlineCollection будут созданы 3 полосы Run
                    TextBlock newt = new TextBlock();
                    Run r = new Run(); // Специальная полоса для поисковой строки
                    r.FontWeight = FontWeight.FromOpenTypeWeight(600);
                    r.Background = new SolidColorBrush(Colors.LightGray);
                    newt.Width = obj.ActualWidth;
                    newt.TextWrapping = TextWrapping.Wrap;
                    if (obj == combo_name)
                    {
                        r.Text = list[i].Name.Substring(index, st.Length);
                        newt.Inlines.Add(list[i].Name.Substring(0, index));
                        newt.Inlines.Add(r);
                        newt.Inlines.Add(list[i].Name.Substring(index + st.Length, sl.Length - (index + st.Length)));
                    }
                    else
                    {
                        r.Text = list[i].Code.Substring(index, st.Length);
                        newt.Inlines.Add(list[i].Code.Substring(0, index));
                        newt.Inlines.Add(r);
                        newt.Inlines.Add(list[i].Code.Substring(index + st.Length, sl.Length - (index + st.Length)));
                    }
                    obj.Items.Add(newt);
                }
            }
        }

        private void Sort(List<ISOs> list, int l, int r)
        {
            ISOs temp;
            string x;
            if (tabcontrol.SelectedIndex == 0)
                x = list[l + (r - l) / 2].Name;
            else
                x = list[l + (r - l) / 2].Code;
            int i = l;
            int j = r;
            while (i <= j)
            {
                if (tabcontrol.SelectedIndex == 0)
                    while (string.Compare(list[i].Name, x) == -1) i++;
                else
                    while (string.Compare(list[i].Code, x) == -1) i++;
                if (tabcontrol.SelectedIndex == 0)
                    while (string.Compare(list[j].Name, x) == 1) j--;
                else
                    while (string.Compare(list[j].Code, x) == 1) j--;
                if (i <= j)
                {
                    temp = list[i];
                    list[i] = list[j];
                    list[j] = temp;
                    i++;
                    j--;
                }
            }
            if (i < r)
                Sort(list, i, r);
            if (l < j)
                Sort(list, l, j);
        }

        private void ComboBox_TextChanged(object sender, RoutedEventArgs e)
        {
            if (handTC) // Если нужно обрабатывать...
            {
                DescriptionCleaning(); // Очищаем панель описания
                ComboBox cb = (ComboBox)sender;
                if (!cb.IsDropDownOpen) // Открываем спадающую панель элементов
                {
                    cb.IsDropDownOpen = true;
                    // Убираем выделение
                    TextBox tb = (TextBox)e.OriginalSource;
                    tb.Select(tb.SelectionStart + tb.SelectionLength, 0);
                }
                // Убираем выборку элемента
                cb.SelectedIndex = -1;
                cb.SelectedItem = null;
                // Если текст пустой, то закрываем панель
                if (cb.Text == "")
                    cb.IsDropDownOpen = false;
                // Новая инициализация элементов
                cb.Items.Clear();
                InitializeComboBoxItems(list, cb);
            }
            else
                handTC = true;
        }

        // При изменении размеров окна нужно менять рахмеры элементов ComboBoxа
        private void ComboBox_SizeChanged(object sender, SizeChangedEventArgs e)
        {
            ComboBox cb = (ComboBox)sender;
            for (int i = 0; i < cb.Items.Count; i++)
            {
                TextBlock tb = (TextBlock)cb.Items[i];
                tb.Width = cb.ActualWidth;
            }
        }

        // При изменении выбранного заголовка TabControlя
        private void TabControl_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            if (tabcontrol.SelectedIndex != choice) // если индекс заголовка изменился...
           {
                // Очистка
                combo_code.Text = "";
                combo_code.Items.Clear();
                combo_name.Text = "";
                combo_name.Items.Clear();
                DescriptionCleaning();
                // Инициализация ComboBoxа в данном элементе TabControlя
                if (tabcontrol.SelectedIndex == 1)
                    InitializeComboBoxItems(list, combo_code);
                else
                    InitializeComboBoxItems(list, combo_name);
                choice = tabcontrol.SelectedIndex; // Запоминаем значение индекса текущего заголовка
            }
        }

        // При изменении выбранного элемента ComboBoxа
        private void ComboBox_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            ComboBox cb = (ComboBox)sender;
            if (cb.SelectedIndex != -1)
            {
                TextBlock tb = (TextBlock)cb.Items[cb.SelectedIndex]; // Достаем элемент из ComboBoxа  
                string txt = TextSearch(tb); // Нужно вытащить текст данного элемента
                int index = SearchInListIndex(txt); // Находим индекс выбранного элемента в списке
                CreateDescription(index); // Заполняем контейнер описанием данного элемента
                handTC = false; // Обрабатывать событие TextChanget не нужно!!!
            }
        }

        private string TextSearch(TextBlock tb)
        {
            int count = tb.Inlines.Count; 
            string txt = ""; // Строка для записи строки выбранного элемента
            // Так как у нас сложная структура элементов будем по очереди доставать атомные элементы из InlineCollection
            for (int i = 0; i < count; i++)
            {
                Run r = (Run)tb.Inlines.FirstInline;
                txt += r.Text;
                tb.Inlines.Remove(tb.Inlines.FirstInline);
                tb.Inlines.Add(r);
            }
            return txt;
        }

        private int SearchInListIndex(string s)
        {
            int index = -1;
            int i = 0;
            while ((i < list.Count) && (index == -1))
            {
                if ((s == list[i].Name) || (s == list[i].Code))
                    index = i;
                i++;
            }
            return index;
        }

        private void CreateDescription(int index)
        {
            PagesRow.Text = "Страниц: ........................................................................... ";
            StateRow.Text = "Статус: ............................................................................... ";
            CurrentCode.Text = list[index].Code;
            CurrentName.Text = list[index].Name;
            if (list[index].State == State.Acts)
                StatePicture.Source = new BitmapImage(new Uri("/Resources/Acts.png", UriKind.Relative));
            else
                 StatePicture.Source = new BitmapImage(new Uri("/Resources/Canceled.png", UriKind.Relative));
            PagesRow.Text += list[index].Pages.ToString();
            if (list[index].State.ToString() == "Acts")
                StateRow.Text += "Действует";
            else
                StateRow.Text += "Заменен";
            path = list[index].FilePath;
            Panelwithin.Visibility = Visibility.Visible;
        }

        private void DescriptionCleaning()
        {
            CurrentCode.Text = "";
            CurrentName.Text = "";
            StateRow.Text = "";
            PagesRow.Text = "";
            StatePicture.Source = null;
            Panelwithin.Visibility = Visibility.Hidden;
        }

        // При нажатии на картинку pdf файла
        private void Image_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
        {
              System.Diagnostics.Process.Start(path);
        }

        // При нажатии на кнопку "Поиск"
        private void TextBlock_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
        {
            if ((choice == 0) && (combo_name.Items.Count != 0) && (combo_name.Text !=""))
            {
                Random ran = new Random();
                TextBlock tb = (TextBlock)combo_name.Items[ran.Next(combo_name.Items.Count - 1)]; // Достаем случайный элемент из ComboBoxа
                string txt = TextSearch(tb); // Нужно вытащить текст данного элемента
                int index = SearchInListIndex(txt); // Находим индекс выбранного элемента в списке
                CreateDescription(index); // Заполняем контейнер описанием данного элемента
            } 
            else
            {
                if ((choice == 1) && (combo_code.Items.Count != 0) && (combo_code.Text != ""))
                {
                    Random ran = new Random();
                    TextBlock tb = (TextBlock)combo_code.Items[ran.Next(combo_name.Items.Count - 1)]; // Достаем элемент из ComboBoxа
                    string txt = TextSearch(tb); // Нужно вытащить текст данного элемента
                    int index = SearchInListIndex(txt); // Находим индекс выбранного элемента в списке
                    CreateDescription(index); // Заполняем контейнер описанием данного элемента
                }
            }
        }
    }
}
